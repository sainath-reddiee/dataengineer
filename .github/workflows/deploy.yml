name: Build and Deploy to Hostinger

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_sitemap:
        description: 'Force regenerate sitemap'
        required: false
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci
      
      - name: 🗺️ Generate Sitemap
        run: |
          if [ "${{ github.event.inputs.force_sitemap }}" == "true" ]; then
            npm run sitemap:generate:force
          else
            npm run sitemap:generate
          fi
      
      - name: ✅ Validate Sitemap
        run: npm run sitemap:validate
      
      - name: 🏗️ Build Application
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: 🔍 Verify Build & Copy Files
        run: |
          echo "📊 Checking build output..."
          
          if [ ! -d "dist" ]; then
            echo "❌ dist directory not found!"
            exit 1
          fi
          
          # Copy sitemap
          if [ -f "public/sitemap.xml" ]; then
            cp public/sitemap.xml dist/
            echo "✅ Copied sitemap.xml"
          fi
          
          # Copy robots.txt
          if [ -f "public/robots.txt" ]; then
            cp public/robots.txt dist/
            echo "✅ Copied robots.txt"
          fi
          
          # Copy IndexNow key files (IMPORTANT!)
          if [ -f "public/indexnow-key.txt" ]; then
            cp public/indexnow-key.txt dist/
            echo "✅ Copied indexnow-key.txt"
            
            # Get the key value
            KEY=$(cat public/indexnow-key.txt)
            
            # Copy the verification file (KEY.txt)
            if [ -f "public/${KEY}.txt" ]; then
              cp "public/${KEY}.txt" dist/
              echo "✅ Copied ${KEY}.txt (verification file)"
            else
              echo "⚠️  Warning: Verification file public/${KEY}.txt not found"
            fi
          else
            echo "⚠️  Warning: indexnow-key.txt not found (will be generated on first notification)"
          fi
          
          echo ""
          echo "✅ Build verification passed"
          echo "📁 Files in dist:"
          ls -lha dist/ | head -20
      
      - name: 🚀 Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          local-dir: ./dist/
          server-dir: ${{ secrets.FTP_REMOTE_PATH }}/
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env
      
      - name: ⏸️ Wait for FTP Sync
        run: |
          echo "⏳ Waiting 30 seconds for FTP files to sync..."
          sleep 30
      
      - name: 🔍 Verify Deployment
        run: |
          echo "🌐 Checking if files are accessible..."
          
          # Check sitemap
          SITEMAP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://dataengineerhub.blog/sitemap.xml || echo "000")
          echo "Sitemap: HTTP $SITEMAP_CODE"
          
          # Check robots.txt
          ROBOTS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://dataengineerhub.blog/robots.txt || echo "000")
          echo "Robots.txt: HTTP $ROBOTS_CODE"
          
          # Check IndexNow key (if exists)
          if [ -f "dist/indexnow-key.txt" ]; then
            KEY=$(cat dist/indexnow-key.txt)
            KEY_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://dataengineerhub.blog/${KEY}.txt" || echo "000")
            echo "IndexNow Key (${KEY}.txt): HTTP $KEY_CODE"
            
            if [ "$KEY_CODE" != "200" ]; then
              echo "⚠️  Warning: IndexNow key file not accessible yet (may take a few minutes)"
            else
              echo "✅ IndexNow key file is accessible!"
            fi
          fi
      
      - name: 📢 Notify Search Engines
        run: |
          echo "📡 Notifying search engines..."
          npm run sitemap:notify || echo "⚠️ Notification skipped (will retry on next deployment)"
        continue-on-error: true
      
      - name: 📊 Summary
        run: |
          echo "## 🚀 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Built and deployed to Hostinger" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Live Site**: https://dataengineerhub.blog" >> $GITHUB_STEP_SUMMARY
          echo "🗺️ **Sitemap**: https://dataengineerhub.blog/sitemap.xml" >> $GITHUB_STEP_SUMMARY
          echo "🤖 **Robots**: https://dataengineerhub.blog/robots.txt" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "dist/indexnow-key.txt" ]; then
            KEY=$(cat dist/indexnow-key.txt)
            echo "🔑 **IndexNow**: https://dataengineerhub.blog/${KEY}.txt" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: 💾 Upload Sitemap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sitemap-${{ github.run_number }}
          path: dist/sitemap.xml
          retention-days: 30

  validate-sitemap:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci
      
      - name: 🗺️ Test Sitemap Generation
        run: npm run sitemap:generate
      
      - name: ✅ Validate Sitemap
        run: npm run sitemap:validate
      
      - name: 🏗️ Test Build
        run: npm run build
      
      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('public/sitemap.xml')) {
              const content = fs.readFileSync('public/sitemap.xml', 'utf8');
              const urlCount = (content.match(/<url>/g) || []).length;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ Sitemap validation passed!\n\n📊 URLs: ${urlCount}`
              });
            }
