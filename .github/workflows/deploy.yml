name: Build and Deploy to Hostinger

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_sitemap:
        description: 'Force regenerate sitemap'
        required: false
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci
      
      - name: 🗺️ Generate Sitemap
        run: |
          if [ "${{ github.event.inputs.force_sitemap }}" == "true" ]; then
            npm run sitemap:generate:force
          else
            npm run sitemap:generate
          fi
      
      - name: ✅ Validate Sitemap
        run: npm run sitemap:validate
      
      - name: 🏗️ Build Application
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: 🔍 Verify Build
        run: |
          echo "📊 Checking build output..."
          
          if [ ! -d "dist" ]; then
            echo "❌ dist directory not found!"
            exit 1
          fi
          
          # Ensure sitemap is in dist
          if [ -f "public/sitemap.xml" ] && [ ! -f "dist/sitemap.xml" ]; then
            cp public/sitemap.xml dist/sitemap.xml
            echo "✅ Copied sitemap to dist"
          fi
          
          if [ -f "public/robots.txt" ] && [ ! -f "dist/robots.txt" ]; then
            cp public/robots.txt dist/robots.txt
            echo "✅ Copied robots.txt to dist"
          fi
          
          echo "✅ Build verification passed"
          ls -lh dist/ | head -10
      
      - name: 🚀 Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          local-dir: ./dist/
          server-dir: ${{ secrets.FTP_REMOTE_PATH }}/
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env
      
      - name: 🔍 Verify Deployment
        run: |
          echo "🌐 Waiting for deployment to complete..."
          sleep 15
          
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://dataengineerhub.blog/sitemap.xml || echo "000")
          
          if [ "$HTTP_CODE" == "200" ]; then
            echo "✅ Sitemap is live!"
          else
            echo "⚠️ Sitemap returned HTTP $HTTP_CODE (might take a few minutes)"
          fi
      
      - name: 📢 Notify Search Engines
        run: npm run sitemap:notify || echo "⚠️ Notification skipped"
        continue-on-error: true
      
      - name: 📊 Summary
        run: |
          echo "## 🚀 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Built and deployed to Hostinger" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Live Site**: https://dataengineerhub.blog" >> $GITHUB_STEP_SUMMARY
          echo "🗺️ **Sitemap**: https://dataengineerhub.blog/sitemap.xml" >> $GITHUB_STEP_SUMMARY
      
      - name: 💾 Upload Sitemap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sitemap-${{ github.run_number }}
          path: dist/sitemap.xml
          retention-days: 30

  # Separate job for PR validation
  validate-sitemap:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci
      
      - name: 🗺️ Test Sitemap Generation
        run: npm run sitemap:generate
      
      - name: ✅ Validate Sitemap
        run: npm run sitemap:validate
      
      - name: 🏗️ Test Build
        run: npm run build
      
      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('public/sitemap.xml')) {
              const content = fs.readFileSync('public/sitemap.xml', 'utf8');
              const urlCount = (content.match(/<url>/g) || []).length;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ Sitemap validation passed!\n\n📊 URLs: ${urlCount}`
              });
            }
