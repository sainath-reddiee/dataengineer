name: Build and Deploy to Hostinger (Ultra-Optimized)

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'package.json'
      - 'functions.php'
      - 'package-lock.json'
      - 'vite.config.js'
      - 'tailwind.config.js'
      - 'postcss.config.js'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * *'
  repository_dispatch:
    types: [post-published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🔍 Detect Changes
        id: changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -qE '^(src/|index.html|vite.config.js|tailwind.config.js|package)'; then
            echo "code_changed=true" >> $GITHUB_OUTPUT
            echo "🔨 Code changes detected - full rebuild needed"
          else
            echo "code_changed=false" >> $GITHUB_OUTPUT
            echo "📄 Only content/config changed - trying cache"
          fi

      - name: 💾 Restore Build Cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.npm
            dist
            public/sitemap.xml
            public/indexnow-key.txt
          key: build-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**', 'index.html', 'vite.config.js', 'tailwind.config.js', 'postcss.config.js') }}
          restore-keys: |
            build-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        if: steps.cache-restore.outputs.cache-hit != 'true' || steps.changes.outputs.code_changed == 'true'
        run: npm ci --prefer-offline --no-audit

      - name: 🗺️ Generate & Validate Sitemap
        if: |
          steps.cache-restore.outputs.cache-hit != 'true' || 
          github.event_name == 'repository_dispatch' || 
          github.event_name == 'schedule'
        run: |
          npm run sitemap:generate || echo "⚠️ Sitemap generation skipped"
          npm run sitemap:validate || echo "⚠️ Sitemap validation skipped"
        continue-on-error: true

      - name: 🏗️ Build Application
        if: steps.cache-restore.outputs.cache-hit != 'true' || steps.changes.outputs.code_changed == 'true'
        run: npm run build
        env:
          NODE_ENV: production
          VITE_ADS_ENABLED: ${{ secrets.VITE_ADS_ENABLED }}
          VITE_ADSENSE_PUBLISHER_ID: ${{ secrets.VITE_ADSENSE_PUBLISHER_ID }}
          VITE_GA_MEASUREMENT_ID: ${{ secrets.VITE_GA_MEASUREMENT_ID }}

      - name: ℹ️ Build Status
        run: |
          if [ "${{ steps.cache-restore.outputs.cache-hit }}" == "true" ]; then
            if [ "${{ steps.changes.outputs.code_changed }}" == "true" ]; then
              echo "🔨 Code changed - rebuilt anyway"
            else
              echo "✅ Using cached build (saved ~50 seconds)"
              echo "📊 FTP will only sync changed files (5-10s)"
            fi
          else
            echo "🆕 Fresh build completed"
          fi

      - name: 🔑 Generate IndexNow Key
        run: |
          node -e "
          const fs = require('fs');
          const path = require('path');
          const crypto = require('crypto');
          
          const publicDir = path.join(process.cwd(), 'public');
          const keyFile = path.join(publicDir, 'indexnow-key.txt');
          
          if (!fs.existsSync(publicDir)) {
            fs.mkdirSync(publicDir, { recursive: true });
          }
          
          if (fs.existsSync(keyFile)) {
            const key = fs.readFileSync(keyFile, 'utf8').trim();
            console.log('✅ Using existing key:', key);
          } else {
            const key = crypto.randomBytes(16).toString('hex');
            fs.writeFileSync(keyFile, key, 'utf8');
            const verificationFile = path.join(publicDir, \`\${key}.txt\`);
            fs.writeFileSync(verificationFile, key, 'utf8');
            console.log('🔑 Generated new key:', key);
          }
          "

      - name: 📋 Prepare Files
        run: |
          # Ensure dist directory exists
          mkdir -p dist
          
          # Copy essential files if they exist
          [ -f "public/sitemap.xml" ] && cp public/sitemap.xml dist/ && echo "✅ Copied sitemap.xml"
          [ -f "public/robots.txt" ] && cp public/robots.txt dist/ && echo "✅ Copied robots.txt"
          
          # [FIXED] Add this line to copy the .htaccess file
          [ -f "public/.htaccess" ] && cp public/.htaccess dist/ && echo "✅ Copied .htaccess"
          
          # Copy all .txt files from public to dist
          find public -name "*.txt" -exec cp {} dist/ \; 2>/dev/null && echo "✅ Copied .txt files" || echo "⚠️ No .txt files found"
          
          echo "✅ Files prepared for deployment"

      - name: 🚀 Deploy to Hostinger (FTPS)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          protocol: ftps
          security: loose
          local-dir: ./dist/
          server-dir: /public_html/
          dangerous-clean-slate: false
          state-name: .ftp-deploy-sync-state.json
          dry-run: false
          timeout: 300000
          log-level: standard
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env
            **/.DS_Store
            **/Thumbs.db

      - name: ⏸️ Smart Wait
        run: |
          if [ "${{ steps.cache-restore.outputs.cache-hit }}" == "true" ] && [ "${{ steps.changes.outputs.code_changed }}" != "true" ]; then
            echo "⚡ Cache hit - minimal wait (3s)"
            sleep 3
          else
            echo "⏳ Full deploy - waiting 8s for propagation"
            sleep 8
          fi

      - name: 🔍 Deployment Verification
        run: |
          echo "🔍 Verifying deployment..."
          
          # Check main site
          if curl -sf -o /dev/null -w "%{http_code}" https://dataengineerhub.blog/ | grep -q "200"; then
            echo "✅ Main site is accessible"
          else
            echo "⚠️ Main site check failed"
          fi
          
          # Check sitemap
          if curl -sf -o /dev/null https://dataengineerhub.blog/sitemap.xml; then
            echo "✅ Sitemap is accessible"
          else
            echo "⚠️ Sitemap not found (may not exist yet)"
          fi
          
          # Check robots.txt
          if curl -sf -o /dev/null https://dataengineerhub.blog/robots.txt; then
            echo "✅ Robots.txt is accessible"
          else
            echo "⚠️ Robots.txt not found"
          fi
          
          # Check IndexNow key
          if [ -f "public/indexnow-key.txt" ]; then
            KEY=$(cat public/indexnow-key.txt | tr -d '[:space:]')
            if curl -sf -o /dev/null "https://dataengineerhub.blog/${KEY}.txt"; then
              echo "✅ IndexNow key verification file is accessible"
            else
              echo "⚠️ IndexNow key verification failed"
            fi
          fi
        continue-on-error: true

      - name: 📢 Notify Search Engines
        if: |
          steps.cache-restore.outputs.cache-hit != 'true' || 
          github.event_name == 'repository_dispatch' || 
          github.event_name == 'schedule'
        run: |
          npm run sitemap:notify || echo "⚠️ Search engine notification queued"
        continue-on-error: true
        timeout-minutes: 2

      - name: 📊 Deployment Summary
        run: |
          echo "## 🚀 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.cache-restore.outputs.cache-hit }}" == "true" ] && [ "${{ steps.changes.outputs.code_changed }}" != "true" ]; then
            echo "⚡ **Cache Hit** - Only changed files uploaded" >> $GITHUB_STEP_SUMMARY
            echo "⏱️ **Time Saved:** ~50 seconds" >> $GITHUB_STEP_SUMMARY
          else
            echo "🔨 **Fresh Build** - All files deployed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 [Live Site](https://dataengineerhub.blog)" >> $GITHUB_STEP_SUMMARY
          echo "- 🗺️ [Sitemap](https://dataengineerhub.blog/sitemap.xml)" >> $GITHUB_STEP_SUMMARY
          echo "- 🤖 [Robots.txt](https://dataengineerhub.blog/robots.txt)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📈 Build Info" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY

      - name: 💾 Save Cache
        if: steps.cache-restore.outputs.cache-hit != 'true' || steps.changes.outputs.code_changed == 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.npm
            dist
            public/sitemap.xml
            public/indexnow-key.txt
          key: build-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**', 'index.html', 'vite.config.js', 'tailwind.config.js', 'postcss.config.js') }}

      - name: 💾 Upload Artifact
        if: steps.cache-restore.outputs.cache-hit != 'true' || github.event_name == 'repository_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.run_number }}
          path: |
            dist/
            public/sitemap.xml
          retention-days: 7
        continue-on-error: true

  validate-sitemap:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: 🗺️ Generate Sitemap
        run: npm run sitemap:generate
        continue-on-error: true
      
      - name: ✅ Validate Sitemap
        run: npm run sitemap:validate
        continue-on-error: true
      
      - name: 💬 PR Comment
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let body = '## 🗺️ Sitemap Validation\n\n';
            
            if (fs.existsSync('public/sitemap.xml')) {
              const content = fs.readFileSync('public/sitemap.xml', 'utf8');
              const urlCount = (content.match(/<url>/g) || []).length;
              
              body += `✅ Sitemap generated successfully!\n\n`;
              body += `📊 **Stats:**\n`;
              body += `- URLs: ${urlCount}\n`;
              body += `- Size: ${(content.length / 1024).toFixed(2)} KB\n`;
            } else {
              body += `⚠️ Sitemap not found. This may be expected if sitemap generation is optional.\n`;
            }
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
        continue-on-error: true
